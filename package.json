{
  "name": "unified-pim-mcp",
  "version": "1.0.0",
  "description": "Unified Personal Information Management MCP Server providing comprehensive CRUD operations for email, calendar, contacts, tasks, and files across Microsoft, Google, and Apple platforms",
  "main": "dist/index.js",
  "type": "module",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "build": "tsc && npm run copy-config",
    "build:watch": "tsc --watch",
    "copy-config": "pwsh -c \"Copy-Item -Path 'config/*' -Destination 'dist/config/' -Recurse -Force\"",
    "dev": "tsx watch src/index.ts",
    "dev:debug": "tsx watch --inspect src/index.ts",
    "dev:microsoft": "cross-env ACTIVE_PLATFORMS=microsoft tsx watch src/index.ts",
    "dev:google": "cross-env ACTIVE_PLATFORMS=google tsx watch src/index.ts",
    "dev:apple": "cross-env ACTIVE_PLATFORMS=apple tsx watch src/index.ts",
    "dev:turbo": "pwsh -c \"& ./scripts/intelligent-dev-server.ps1 -Mode Fast -Turbo\"",
    "dev:intelligent": "pwsh -c \"& ./scripts/intelligent-dev-server.ps1 -Mode Debug\"",
    "start": "node dist/index.js",
    "start:prod": "cross-env NODE_ENV=production node dist/index.js",
    "test": "jest",
    "test:watch": "jest --watch --notify",
    "test:watchAll": "jest --watchAll --notify",
    "test:unit": "jest tests/unit",
    "test:integration": "jest --config jest.integration.config.cjs tests/integration",
    "test:integration:auth": "jest --config jest.integration.config.cjs tests/integration/auth.integration.test.ts",
    "test:integration:email": "jest --config jest.integration.config.cjs tests/integration/email-service.integration.test.ts",
    "test:integration:infrastructure": "jest --config jest.integration.config.cjs tests/integration/infrastructure.integration.test.ts",
    "test:integration:mcp": "jest --config jest.integration.config.cjs tests/integration/mcp-protocol.integration.test.ts",
    "test:integration:e2e": "jest --config jest.integration.config.cjs tests/integration/end-to-end.integration.test.ts",
    "test:integration:performance": "jest --config jest.integration.config.cjs tests/integration/performance.integration.test.ts",
    "test:integration:errors": "jest --config jest.integration.config.cjs tests/integration/error-scenarios.integration.test.ts",
    "test:e2e": "jest --config jest.e2e.config.js",
    "test:coverage": "jest --coverage",
    "test:coverage:open": "jest --coverage && pwsh -c \"Start-Process 'coverage/lcov-report/index.html'\"",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --runInBand",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:quick": "jest --testPathPattern=\".*\\.(smoke|health)\\.test\\.(ts|js)$\" --passWithNoTests",
    "lint": "eslint src tests --ext .ts,.tsx",
    "lint:fix": "eslint src tests --ext .ts,.tsx --fix",
    "lint:watch": "nodemon --watch src --watch tests --ext ts,tsx --exec \"npm run lint\"",
    "format": "prettier --write \"src/**/*.{ts,tsx,json,md}\" \"tests/**/*.{ts,tsx,json,md}\" \"*.{json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,json,md}\" \"tests/**/*.{ts,tsx,json,md}\" \"*.{json,md}\"",
    "clean": "pwsh -c \"Remove-Item -Path 'dist' -Recurse -Force -ErrorAction SilentlyContinue\"",
    "clean:all": "npm run clean && pwsh -c \"Remove-Item -Path 'node_modules', 'coverage', '.nyc_output' -Recurse -Force -ErrorAction SilentlyContinue\"",
    "prebuild": "npm run clean",
    "prestart": "npm run build",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "validate": "npm run type-check && npm run lint && npm run test",
    "validate:ci": "npm run type-check && npm run lint && npm run test:ci",
    "prepare": "husky install",
    "deps:check": "npm outdated",
    "deps:update": "npm update",
    "deps:audit": "npm audit",
    "deps:audit:fix": "npm audit fix",
    "docker:up": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:down": "docker-compose -f docker-compose.dev.yml down",
    "docker:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "docker:clean": "docker-compose -f docker-compose.dev.yml down -v --remove-orphans",
    "docker:turbo:up": "docker-compose -f docker-compose.turbo.yml up -d --force-recreate",
    "docker:turbo:down": "docker-compose -f docker-compose.turbo.yml down -v --remove-orphans",
    "docker:turbo:logs": "docker-compose -f docker-compose.turbo.yml logs -f",
    "docker:monitoring": "docker-compose -f docker-compose.turbo.yml --profile monitoring up -d",
    "setup": "npm install && npm run docker:up && npm run generate:mocks",
    "setup:dev": "pwsh -c \"& ./scripts/setup-dev-env.ps1\"",
    "setup:ultimate": "pwsh -c \"& ./scripts/ultimate-dev-setup.ps1 -Mode Full -Performance\"",
    "setup:quick": "pwsh -c \"& ./scripts/ultimate-dev-setup.ps1 -Mode Quick\"",
    "setup:turbo": "pwsh -c \"& ./scripts/ultimate-dev-setup.ps1 -Mode Quick\" && npm run docker:turbo:up",
    "generate:mocks": "pwsh -c \"& ./scripts/generate-mock-data.ps1\"",
    "docs:generate": "typedoc --out docs/api src",
    "docs:serve": "pwsh -c \"Start-Process 'docs/api/index.html'\"",
    "health": "node -e \"console.log('Node.js:', process.version); console.log('npm:', process.env.npm_version || 'unknown');\"",
    "analyze:bundle": "npm run build && pwsh -c \"Get-ChildItem -Recurse dist | Measure-Object -Property Length -Sum\"",
    "analyze:deps": "madge --extensions ts,js --image deps-graph.svg src/",
    "benchmark": "pwsh -c \"& ./scripts/performance-benchmarks.ps1 -Suite all\"",
    "benchmark:auth": "tsx tests/performance/benchmark.ts --suite=auth",
    "benchmark:rate-limiter": "tsx tests/performance/benchmark.ts --suite=rate-limiter",
    "benchmark:circuit-breaker": "tsx tests/performance/benchmark.ts --suite=circuit-breaker",
    "benchmark:cache": "tsx tests/performance/benchmark.ts --suite=cache",
    "benchmark:graph-client": "tsx tests/performance/benchmark.ts --suite=graph-client",
    "benchmark:memory": "pwsh -c \"& ./scripts/performance-benchmarks.ps1 -Suite memory -Output html\"",
    "benchmark:api": "pwsh -c \"& ./scripts/performance-benchmarks.ps1 -Suite api -Duration 30\"",
    "benchmark:database": "pwsh -c \"& ./scripts/performance-benchmarks.ps1 -Suite database\"",
    "benchmark:stress": "pwsh -c \"& ./scripts/performance-benchmarks.ps1 -Suite stress -Duration 300 -Concurrency 50\"",
    "profile": "node --prof --max-old-space-size=4096 dist/index.js",
    "profile:analyze": "node --prof-process isolate-*.log > profile.txt && del isolate-*.log",
    "quality:gate": "pwsh -c \"& ./scripts/quality-gate.ps1 -Stage pre-commit\"",
    "quality:fix": "pwsh -c \"& ./scripts/quality-gate.ps1 -Stage pre-commit -Fix\"",
    "quality:full": "pwsh -c \"& ./scripts/quality-gate.ps1 -Stage ci -Verbose\"",
    "azure:setup": "pwsh -c \"& ./scripts/azure-ad-setup.ps1 -Environment Development\"",
    "azure:setup:prod": "pwsh -c \"& ./scripts/azure-ad-setup.ps1 -Environment Production\"",
    "azure:setup:staging": "pwsh -c \"& ./scripts/azure-ad-setup.ps1 -Environment Staging\"",
    "cli": "pwsh -c \"& ./scripts/ultimate-dev-cli.ps1\"",
    "cli:interactive": "pwsh -c \"& ./scripts/ultimate-dev-cli.ps1 -Interactive\"",
    "cli:help": "pwsh -c \"& ./scripts/dev-cli.ps1 help\"",
    "dev:setup": "pwsh -c \"& ./scripts/dev-cli.ps1 setup\"",
    "dev:status": "pwsh -c \"& ./scripts/dev-cli.ps1 status\"",
    "dev:platform": "pwsh -c \"& ./scripts/dev-cli.ps1 platform\"",
    "dev:mock": "pwsh -c \"& ./scripts/dev-cli.ps1 mock\"",
    "dev:logs": "pwsh -c \"& ./scripts/dev-cli.ps1 logs\"",
    "monitoring:start": "npm run docker:monitoring",
    "monitoring:dashboard": "pwsh -c \"Start-Process 'http://localhost:3000'\"",
    "monitoring:metrics": "pwsh -c \"Start-Process 'http://localhost:9090'\""
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "pim",
    "personal-information-management",
    "email",
    "calendar",
    "contacts",
    "tasks",
    "microsoft-graph",
    "google-apis",
    "apple-integration",
    "hexagonal-architecture"
  ],
  "author": "Brandon Orewyler <brandon@example.com>",
  "license": "MIT",
  "dependencies": {
    "@azure/msal-node": "^2.15.0",
    "@modelcontextprotocol/sdk": "^0.6.0",
    "axios": "^1.11.0",
    "bcrypt": "^5.1.1",
    "chromadb": "^1.5.0",
    "cors": "^2.8.5",
    "crypto-js": "^4.2.0",
    "date-fns": "^3.6.0",
    "dotenv": "^16.4.5",
    "express": "^4.21.1",
    "googleapis": "^142.0.0",
    "helmet": "^8.0.0",
    "imap": "^0.8.19",
    "ioredis": "^5.4.1",
    "jsonwebtoken": "^9.0.2",
    "keytar": "^7.7.0",
    "node-cron": "^3.0.3",
    "node-fetch": "^3.3.2",
    "nodemailer": "^6.9.15",
    "p-limit": "^6.1.0",
    "p-queue": "^8.1.0",
    "p-retry": "^6.2.0",
    "sqlite3": "^5.1.7",
    "uuid": "^10.0.0",
    "winston": "^3.15.0",
    "ws": "^8.18.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/bcrypt": "^5.0.2",
    "@types/cors": "^2.8.17",
    "@types/crypto-js": "^4.2.2",
    "@types/express": "^5.0.0",
    "@types/imap": "^0.8.40",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/node": "^22.7.5",
    "@types/nodemailer": "^6.4.16",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.5.12",
    "@typescript-eslint/eslint-plugin": "^8.40.0",
    "@typescript-eslint/parser": "^8.40.0",
    "concurrently": "^9.0.1",
    "cross-env": "^7.0.3",
    "eslint": "^9.12.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-jest": "^29.0.1",
    "eslint-plugin-prettier": "^5.2.1",
    "husky": "^9.1.6",
    "jest": "^29.7.0",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "jest-performance-testing": "^1.0.0",
    "jest-watch-select-projects": "^2.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "lint-staged": "^15.2.10",
    "madge": "^8.0.0",
    "msw": "^2.4.9",
    "nock": "^13.5.5",
    "nodemon": "^3.1.7",
    "npm-check-updates": "^17.1.3",
    "prettier": "^3.3.3",
    "rimraf": "^6.0.1",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "tsx": "^4.19.1",
    "typedoc": "^0.26.8",
    "typescript": "^5.6.3",
    "wait-on": "^8.0.1"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/brandon-orewyler/unified-pim-mcp.git"
  },
  "bugs": {
    "url": "https://github.com/brandon-orewyler/unified-pim-mcp/issues"
  },
  "homepage": "https://github.com/brandon-orewyler/unified-pim-mcp#readme"
}
